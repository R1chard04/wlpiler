INT int
ID containsDuplicates
LPAREN (
INT int
STAR *
ID array
COMMA ,
INT int
ID size
RPAREN )
LBRACE {
INT int
STAR *
ID seen
BECOMES =
NULL NULL
SEMI ;
INT int
ID i
BECOMES =
NUM 0
SEMI ;
INT int
ID theMax
BECOMES =
NUM 2147483467
SEMI ;
INT int
ID result
BECOMES =
NUM 0
SEMI ;
ID theMax
BECOMES =
ID max
LPAREN (
ID array
COMMA ,
ID size
RPAREN )
SEMI ;
ID seen
BECOMES =
NEW new
INT int
LBRACK [
ID theMax
RBRACK ]
SEMI ;
WHILE while
LPAREN (
ID theMax
GE >=
ID i
PLUS +
NUM 1
RPAREN )
LBRACE {
STAR *
LPAREN (
ID seen
PLUS +
ID i
RPAREN )
BECOMES =
NUM 0
SEMI ;
ID i
BECOMES =
ID i
PLUS +
NUM 1
SEMI ;
RBRACE }
ID i
BECOMES =
NUM 0
SEMI ;
WHILE while
LPAREN (
ID i
PLUS +
NUM 1
LE <=
ID size
RPAREN )
LBRACE {
IF if
LPAREN (
STAR *
LPAREN (
ID seen
PLUS +
STAR *
LPAREN (
ID array
PLUS +
ID i
RPAREN )
RPAREN )
EQ ==
NUM 1
RPAREN )
LBRACE {
ID result
BECOMES =
NUM 1
SEMI ;
PRINTLN println
LPAREN (
STAR *
LPAREN (
ID array
PLUS +
ID i
RPAREN )
RPAREN )
SEMI ;
RBRACE }
ELSE else
LBRACE {
RBRACE }
STAR *
LPAREN (
ID seen
PLUS +
STAR *
LPAREN (
ID array
PLUS +
ID i
RPAREN )
RPAREN )
PLUS +
BECOMES =
NUM 1
SEMI ;
ID i
BECOMES =
ID i
PLUS +
NUM 1
RBRACE }
DELETE delete
LBRACK [
RBRACK ]
ID seen
SEMI ;
RETURN return
ID result
SEMI ;
RBRACE }
